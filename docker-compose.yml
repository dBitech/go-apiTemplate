version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - APP_SERVER_HOST=0.0.0.0
      - APP_SERVER_PORT=8080
      - APP_DATABASE_HOST=postgres
      - APP_DATABASE_PORT=5432
      - APP_DATABASE_USER=postgres
      - APP_DATABASE_PASSWORD=postgres
      - APP_DATABASE_NAME=apidb
      - APP_TRACING_ENABLED=true
      - APP_TRACING_ENDPOINT=otel-collector:4317
    depends_on:
      - postgres
      - jaeger
      - prometheus
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=apidb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9091:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - ./deploy/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./deploy/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:1.47
    ports:
      - "16686:16686"
      - "14250:14250"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - app-network

  otel-collector:
    image: otel/opentelemetry-collector:0.83.0
    command: ["--config=/etc/otel-config.yaml"]
    volumes:
      - ./deploy/otel/config.yaml:/etc/otel-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    depends_on:
      - jaeger
      - prometheus
    networks:
      - app-network

volumes:
  postgres-data:
  grafana-data:

networks:
  app-network:
    driver: bridge
